/*
 * Sonarr
 *
 * Sonarr API docs - The v3 API docs apply to both v3 and v4 versions of Sonarr. Some functionality may only be available in v4 of the Sonarr application.
 *
 * The version of the OpenAPI document: v4.0.12.2823
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ParseResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    #[serde(rename = "parsedEpisodeInfo", skip_serializing_if = "Option::is_none")]
    pub parsed_episode_info: Option<Box<models::ParsedEpisodeInfo>>,
    #[serde(rename = "series", skip_serializing_if = "Option::is_none")]
    pub series: Option<Box<models::SeriesResource>>,
    #[serde(rename = "episodes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub episodes: Option<Option<Vec<models::EpisodeResource>>>,
    #[serde(rename = "languages", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub languages: Option<Option<Vec<models::Language>>>,
    #[serde(rename = "customFormats", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_formats: Option<Option<Vec<models::CustomFormatResource>>>,
    #[serde(rename = "customFormatScore", skip_serializing_if = "Option::is_none")]
    pub custom_format_score: Option<i32>,
}

impl ParseResource {
    pub fn new() -> ParseResource {
        ParseResource {
            id: None,
            title: None,
            parsed_episode_info: None,
            series: None,
            episodes: None,
            languages: None,
            custom_formats: None,
            custom_format_score: None,
        }
    }
}

