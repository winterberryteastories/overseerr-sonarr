/*
 * Sonarr
 *
 * Sonarr API docs - The v3 API docs apply to both v3 and v4 versions of Sonarr. Some functionality may only be available in v4 of the Sonarr application.
 *
 * The version of the OpenAPI document: v4.0.12.2823
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LanguageProfileResource {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "upgradeAllowed", skip_serializing_if = "Option::is_none")]
    pub upgrade_allowed: Option<bool>,
    #[serde(rename = "cutoff", skip_serializing_if = "Option::is_none")]
    pub cutoff: Option<Box<models::Language>>,
    #[serde(rename = "languages", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub languages: Option<Option<Vec<models::LanguageProfileItemResource>>>,
}

impl LanguageProfileResource {
    pub fn new() -> LanguageProfileResource {
        LanguageProfileResource {
            id: None,
            name: None,
            upgrade_allowed: None,
            cutoff: None,
            languages: None,
        }
    }
}

